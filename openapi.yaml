openapi: 3.0.0

info:
  version: 1.0.0
  title: CDP ETL
  description: API para o processo de ETL do CDP

servers:
  - url: http://localhost:5000

paths:
  /connectors:
    post:
      description: Cria o conector para a empresa passada
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connector'
      responses:
        '201':
          description: Conector criado com sucesso
      tags:
        - connectors


  /connectors/{company_name}:
    get:
      description: Retorna o conector para a empresa passada
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string

      responses:
        '200':
          description: Conector encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Connector'

        '404':
          description: Conector não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Conector não encontrado para essa empresa
      tags:
        - connectors
    put:
      description: Atualiza um conector de uma empresa
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Connector'
      responses:
        '204':
          description: Conector atualizado com sucesso
        '404':
          description: Conector não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Conector não encontrado para essa empresa
      tags:
        - connectors
      
    delete:
      description: Deleta o conector para a empresa passada
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Conector apagado
        '404':
          description: Conector não encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Conector não encontrado para essa empresa
      tags:
        - connectors


  /connectors/{company_name}/filenames:
    get:
      description: Busca os nomes dos arquivos no servidor usando o conector já configurado
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string
        - name: remote
          in: path
          required: false
          schema:
            type: bool

      responses:
        '200':
          description: Nomes dos arquivos encontrados
          content:
            application/json:
              schema:
                type: object
                example:
                  status: ok
                  message: Arquivos encontrados com sucesso
                  filenames: ['filename1', 'filename2', 'filename3']
        '404':
          description: Conector não encontrado para essa empresa
          content:
            application/json:
              schema:
                type: object
                properties:
                  detail:
                    type: string
                    example: Conector não encontrado para essa empresa
      tags:
        - connectors
            
  /connectors/{company_name}/database_mapping:
    get:
      description: Busca o mapeamento do banco de dados no conector da empresa
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Conector encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DatabaseMapping'
        '404':
          description: Conector não encontrado para essa empresa
      tags:
        - connectors

    post:
      description: Insere ou atualiza o mapeamento do banco de dados no conector
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseMapping'

      responses:
        '201':
          description: Mapeamento criado com sucesso
        '404':
          description: Conector não encontrado para essa empresa
        '422':
          description: Estrutura do mapeamento está errada
      tags:
        - connectors

  /databases/{company_name}:
    put:
      description: Atualiza o banco de dados da empresa
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Atualização em andamento
        '404':
          description: Conector não encontrado para essa empresa
      tags:
        - databases

  /processors:
    post:
      description: Cria um processador
      requestBody:
        content:        
          application/json:
            schema:
              $ref: '#/components/schemas/Processor'
      responses:
        '201':
          description: Processsador criado com sucesso
        '422':
          description: Formato do processador inválido

      tags:
        - processors

  /processors/{company_name}:
    get:
      description: Busca o processador de uma empresa
      parameters:
        - name: company_name
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Processador encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Processor'
      tags:
        - processors


components:
  schemas:
    Connector:
      type: object
      required:
        - "company_name"
        - "host"
        - "port"
        - directory
        - user
        - password
        - file_config
        - database_mapping
      properties:
        company_name:
          type: string
          example: Driva Tecnologia
        type:
          type: string
          example: ftp
        host:
          type: string
          example: 192.168.10.14
        port:
          type: integer
          example: 22
        directory:
          type: string
          example: /
        user:
          type: string
          example: Driva
        password:
          type: string
          example: "#driva123"
        file_config:
          type: string
          example:
            type: csv
            encoding: utf-8
            separator: ","
        database_mapping:
          type: object
          example:
            model_filename: Driva Tecnologia
            products_mapping:
              model_filename: produtos.csv
              id: "produto_id"
              type: "tipo"
              description: "desc_produto"
            sales_mapping:
              model_filename: vendas.csv
              id: "id"
              date: "data"
              amount: "quantidade"
              value: valor_total
              product_id: "produto_id"
              salesperson_id: "vendedor_id"
              client_cnpj: "cnpj"
            salespeople_mapping:
              model_filename: vendedores.csv
              id: "vendedor_id"
              manager_id: "gerente_id"

    FileConfig:
      type: object
      required:
        - type
        - encoding
      properties:
        type:
          type: string
          example: csv
        encoding:
          type: string
          example: utf-8
        separator:
          type: string
          example: ","

    DatabaseMapping:
      type: object
      required:
        - products_mapping
        - sales_mapping
        - salespeople_mapping
      properties:
        products_mapping:
          type: object
          example:
            model_filename: "produtos.csv"
            id: "produto_id"
            type: "tipo"
            description: "desc_produto"
        sales_mapping:
          type: object
          example:
            model_filename: "vendas.csv"
            id: "id"
            date: "data"
            amount: "quantidade"
            value: valor_total
            product_id: "produto_id"
            salesperson_id: "vendedor_id"
            client_cnpj: "cnpj"
        salespeople_mapping:
          type: object
          example:
            model_filename: "vendedores.csv"
            id: "vendedor_id"
            manager_id: "gerente_id"

    Processor:
      type: object
      required:
        - company_name
        - parsers
      properties:
        company_name:
          type: string
          example: Driva Tecnologia
        field_aggregators:
          type: array
          example: [
            {
              "type": "field_aggregator",
              "model_applied": "products",
              "field_names": ["campo1", "campo2", "campo3"],
              "method": "sum"
            },
            {
              "type": "field_aggregator",
              "model_applied": "sales",
              "field_names": ["campo1", "campo2", "campo3"],
              "method": "sum"
            }
          ]
        date_formatters:
          type: array
          example: [
            {
              "type": "date_formatter",
              "model_applied": "sales",
              "field_name": "data",
              "date_format": "%d/%m/%Y"
            }
          ]
        number_formatters:
          type: array
          example: [
            {
              "type": "number_formatter",
              "model_applied": "sales",
              "field_names": [
                "val1",
                "val2"
              ],
              "thousand_separator": ".",
              "decimal_separator": ","
            }
          ]


  examples:
    FileConfig:
      value:
        type: object
        example:
          type: "csv"
          encoding: "utf-8"
          separator: ","
